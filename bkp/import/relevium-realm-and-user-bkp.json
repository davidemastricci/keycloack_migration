{
  "id" : "relevium",
  "realm" : "relevium",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "11684c2b-8e9b-4532-950d-6ece2bb56680",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "relevium",
      "attributes" : { }
    }, {
      "id" : "76b89f64-6311-4fab-a8ba-be030745be2b",
      "name" : "default-roles-relevium",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "manage-account", "view-profile" ]
        }
      },
      "clientRole" : false,
      "containerId" : "relevium",
      "attributes" : { }
    }, {
      "id" : "1d0085a7-f965-486b-b765-475408ad0eb3",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "relevium",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "220d60aa-6172-4857-9a5f-bef6c3842efc",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "5c7ac89d-8662-4f8b-b2ae-5ca7d6106a5a",
        "attributes" : { }
      }, {
        "id" : "7664950f-fefd-41cd-83c1-0bd7b6184128",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "5c7ac89d-8662-4f8b-b2ae-5ca7d6106a5a",
        "attributes" : { }
      }, {
        "id" : "24714dee-911d-42bd-9fde-e2c2c5cfbbd7",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "manage-events", "query-groups", "query-users", "impersonation", "query-realms", "manage-identity-providers", "view-identity-providers", "view-clients", "create-client", "manage-users", "view-realm", "view-authorization", "query-clients", "manage-authorization", "manage-realm", "view-users", "view-events", "manage-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "5c7ac89d-8662-4f8b-b2ae-5ca7d6106a5a",
        "attributes" : { }
      }, {
        "id" : "747a4a16-bc0c-414b-9788-fcfff7eeda71",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "5c7ac89d-8662-4f8b-b2ae-5ca7d6106a5a",
        "attributes" : { }
      }, {
        "id" : "09f00528-6f33-443b-86c4-eed8fc304b7b",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "5c7ac89d-8662-4f8b-b2ae-5ca7d6106a5a",
        "attributes" : { }
      }, {
        "id" : "a6be1e30-3730-4712-81ed-e57058b16f68",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "5c7ac89d-8662-4f8b-b2ae-5ca7d6106a5a",
        "attributes" : { }
      }, {
        "id" : "f3eaf632-29a0-4347-a215-0e0fddad23e6",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "5c7ac89d-8662-4f8b-b2ae-5ca7d6106a5a",
        "attributes" : { }
      }, {
        "id" : "8279f1e9-1ef3-4fb1-97f5-f51a88e56bf9",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "5c7ac89d-8662-4f8b-b2ae-5ca7d6106a5a",
        "attributes" : { }
      }, {
        "id" : "32f2acae-2b34-49ef-9054-af5fbd76ca2d",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "5c7ac89d-8662-4f8b-b2ae-5ca7d6106a5a",
        "attributes" : { }
      }, {
        "id" : "ce817fcd-2753-4d32-9225-5acc15f6477d",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "5c7ac89d-8662-4f8b-b2ae-5ca7d6106a5a",
        "attributes" : { }
      }, {
        "id" : "555f3d8b-fd68-44a6-abfe-85f8b9c120fd",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "5c7ac89d-8662-4f8b-b2ae-5ca7d6106a5a",
        "attributes" : { }
      }, {
        "id" : "df93edad-109d-4038-b465-357c892e1f88",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "5c7ac89d-8662-4f8b-b2ae-5ca7d6106a5a",
        "attributes" : { }
      }, {
        "id" : "d8e54697-bb57-49f6-b834-0a672ec3ab63",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "5c7ac89d-8662-4f8b-b2ae-5ca7d6106a5a",
        "attributes" : { }
      }, {
        "id" : "385b0ad3-d478-4a25-8dfa-bba34b77e5da",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "5c7ac89d-8662-4f8b-b2ae-5ca7d6106a5a",
        "attributes" : { }
      }, {
        "id" : "1f900ae5-2a13-4029-9e82-19f43238e65e",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "5c7ac89d-8662-4f8b-b2ae-5ca7d6106a5a",
        "attributes" : { }
      }, {
        "id" : "d0cf9309-7209-4ee8-a6f6-93faa955db61",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "5c7ac89d-8662-4f8b-b2ae-5ca7d6106a5a",
        "attributes" : { }
      }, {
        "id" : "fbca06e6-2a98-4099-aa83-d3cbfdc533da",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "5c7ac89d-8662-4f8b-b2ae-5ca7d6106a5a",
        "attributes" : { }
      }, {
        "id" : "5cccb2d2-af30-4173-89c5-080b8b57e041",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "5c7ac89d-8662-4f8b-b2ae-5ca7d6106a5a",
        "attributes" : { }
      }, {
        "id" : "b434e582-4bc7-4cc6-b020-288f49c89655",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "5c7ac89d-8662-4f8b-b2ae-5ca7d6106a5a",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "ews_client" : [ ],
      "account-console" : [ ],
      "test_client" : [ ],
      "broker" : [ {
        "id" : "809a69c0-3abb-4dae-9f18-023f1ceda34d",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "213ef6fc-9d05-4499-8540-87ae015c5b84",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "57c2b48a-7ef5-4dee-873f-99fce4630bec",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f1f3fd5b-8c8f-496a-b366-f635fd20d0e9",
        "attributes" : { }
      }, {
        "id" : "fde813ab-c6ee-4c38-90d2-7dd698bcf28d",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f1f3fd5b-8c8f-496a-b366-f635fd20d0e9",
        "attributes" : { }
      }, {
        "id" : "bf31ca24-7111-4e10-ba14-0982cbdf869f",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f1f3fd5b-8c8f-496a-b366-f635fd20d0e9",
        "attributes" : { }
      }, {
        "id" : "95892135-d25a-483e-97db-3678209bc7ba",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "f1f3fd5b-8c8f-496a-b366-f635fd20d0e9",
        "attributes" : { }
      }, {
        "id" : "3d17c997-e27c-4498-97e0-84067eb0103f",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "f1f3fd5b-8c8f-496a-b366-f635fd20d0e9",
        "attributes" : { }
      }, {
        "id" : "0787f973-54c6-4cf5-8edb-077bc8338041",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f1f3fd5b-8c8f-496a-b366-f635fd20d0e9",
        "attributes" : { }
      }, {
        "id" : "2701880c-3217-4c3b-89d2-d5078152f494",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f1f3fd5b-8c8f-496a-b366-f635fd20d0e9",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "76b89f64-6311-4fab-a8ba-be030745be2b",
    "name" : "default-roles-relevium",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "relevium"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpSupportedApplications" : [ "FreeOTP", "Google Authenticator" ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "users" : [ {
    "id" : "18e65c18-9091-465c-b4d2-c08e9e73b9ed",
    "createdTimestamp" : 1681913698237,
    "username" : "data_dv",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "credentials" : [ {
      "id" : "a5d8f1c4-4e6a-427b-bf29-282fff0934ca",
      "type" : "password",
      "createdDate" : 1681913716082,
      "secretData" : "{\"value\":\"jlpeXtaLRgfVWAox1v9j9t5gbiy0prb5/e3MYJcvA5/MRdtLj7JBzeZUhRsbwswox6IG3gs8z4P5PH7ftqRpiA==\",\"salt\":\"93HPBsi5M8is6E2c8JM+OQ==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-relevium" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "be095d7a-518f-493d-9df7-229589712815",
    "createdTimestamp" : 1681911686337,
    "username" : "service-account-ews_client",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "serviceAccountClientId" : "ews_client",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-relevium" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "8e4a0e71-bfea-47d1-8a58-99139b3511ce",
    "createdTimestamp" : 1681997115935,
    "username" : "service-account-test_client",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "serviceAccountClientId" : "test_client",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-relevium" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "09e00926-944f-4be7-bf95-2c000e59f2c1",
    "createdTimestamp" : 1681911713961,
    "username" : "test_user_for_relevium",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "credentials" : [ {
      "id" : "2313741b-35f8-47b7-83e9-49505461d0ef",
      "type" : "password",
      "userLabel" : "",
      "createdDate" : 1681911731320,
      "secretData" : "{\"value\":\"dMfpfOopL5jfw2+hI7qbStoyubCpM82/LSszkxgm7K8pslfWh+Mrujq2hZRa4DQuSnF44NgQkLhUzWxzS8m+Hg==\",\"salt\":\"XkfFDLlJe/3PSuzV5CBbjQ==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-relevium" ],
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account" ]
    } ]
  },
  "clients" : [ {
    "id" : "f1f3fd5b-8c8f-496a-b366-f635fd20d0e9",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/relevium/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/relevium/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "44738f3d-6b19-4a75-80ec-fbeaba3750b6",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/relevium/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/relevium/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "417785f1-b207-4534-b9ae-dc7b61391a6a",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "797312fe-8f9f-4905-8744-e92786343e11",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "213ef6fc-9d05-4499-8540-87ae015c5b84",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "efb89549-879a-41ee-8264-d3de896c3aee",
    "clientId" : "ews_client",
    "rootUrl" : "http://localhost:8080/",
    "adminUrl" : "http://localhost:8080/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "x8TLyzYOuq1XNfiO0RejvC6I5pJJYWHk",
    "redirectUris" : [ "http://localhost:8080/*" ],
    "webOrigins" : [ "http://localhost:8080" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "id.token.as.detached.signature" : "false",
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "saml.artifact.binding" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml_force_name_id_format" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "adcb6f3d-14d2-4dce-b00b-4219034f0aa4",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1aa1f684-88d5-4636-8bc7-6b3a16071afb",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientId",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientId",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "8aca3e7d-7b47-4dce-afc7-64d0102efce0",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "5c7ac89d-8662-4f8b-b2ae-5ca7d6106a5a",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "c67d3815-34fd-4f69-8b7a-7a380768dbc7",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/relevium/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/relevium/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "6d0fcf2f-ccc9-4aa5-a492-10cc8a0a4ca6",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "4005b1c0-a7d4-453e-801d-ecfc3a4717f9",
    "clientId" : "test_client",
    "rootUrl" : "http://localhost:8080/",
    "adminUrl" : "http://localhost:8080/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "zTaGt5rOw4d3ZW87UiUvUGViSBp16Z1d",
    "redirectUris" : [ "http://localhost:8080/*" ],
    "webOrigins" : [ "http://localhost:8080" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "id.token.as.detached.signature" : "false",
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "saml.artifact.binding" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml_force_name_id_format" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "4349ef33-dfe4-4f97-9216-a5d9bb64c72a",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b077ce06-646a-48af-b7cf-2aeca194073c",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "8caeaff8-10a7-4bb2-80f7-d4b4c7583abb",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientId",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientId",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "c337be7e-c2b8-4584-a2a6-e7c70b75c5fe",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "57134f66-a744-477e-8003-4f78b725b923",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    }, {
      "id" : "05d325bd-6006-486c-a994-b3137f39954e",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "c7809d22-84e4-4728-905b-65757f4cb478",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "0e98bd87-9f96-43ac-b01d-d65c801fe5d1",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "1a7acee3-f216-4d61-a0f8-bc5fcc7a52bb",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7afc82ea-023a-4464-aa5a-3c821b6bf01e",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "0d91ef1d-62fd-4782-9bcb-ba2d6fc0b826",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "f09fb49d-14f7-4e10-948d-86f2d5e9e97e",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6ba232aa-56fd-449e-b050-64c201838c97",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "21c1292c-9a53-43b7-bd29-cc15471c732a",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "8b79b090-a782-45c0-b1c0-b2987bb015ff",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "0464dba9-5e76-46ea-8d51-4fd7e6f5e875",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "118bb01c-275a-4ad9-9338-f666bbfd59a5",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "8e1cb078-ef18-4519-afc1-630db9dba578",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1fb4528b-cf39-4101-9993-fd6cb202d149",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6585356b-11f1-4982-a77b-232e6b191f19",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7c44634f-da79-4fbe-a869-68a7a78908c1",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7e8e9974-0264-45d9-bf8c-de9b48e5be32",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "616184d1-4888-4369-872d-4d6a4b019c79",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d9f4d736-c0ef-46c8-83a8-568c9cb1fc1b",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5732ba5f-fe9e-48c7-a69c-b3d119a17882",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e1362491-3c41-40ef-927f-4a0e63cb9282",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "78920963-e06e-46ca-912c-165826f56b18",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e4a0673a-9664-45ae-a713-6306c76a3763",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e13f199e-8401-43a0-bdee-def4fdcf4811",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "66c892c9-efc3-4a0e-b9ac-ca2a1bca883a",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "9846e3a6-d01d-4671-bac1-ee3fb3f58777",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "4683da8c-98fd-4df7-a1c1-5c497910fa24",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "4841d4fe-e2f8-486d-b476-e91c3d8ee7cf",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "acc3254f-35da-4375-9552-3b54fe4efe35",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "2ff9928c-e623-4422-9af6-8c1a1ec62cc9",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f55ffc1e-898b-4b18-be62-4c7c543225e9",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "6a46fe95-274a-4f4f-99a7-d1eeb9e5688f",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "5099f12c-3afe-4f85-83cc-48fe502b0280",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "095b9e34-439f-42d9-8d4c-78f64616e476",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "ef0fed17-8d6b-41c5-bfbd-03a2ed7fc7e7",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "45fdd474-0191-45af-a3a6-ad25f1bf3459",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "07259371-82cd-42f4-9f84-3063efdd7d84",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "96690787-52ea-468f-bc29-d55d9a115f64",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-user-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-property-mapper", "saml-user-property-mapper", "saml-role-list-mapper", "oidc-address-mapper", "oidc-usermodel-attribute-mapper", "oidc-full-name-mapper" ]
      }
    }, {
      "id" : "57fcefc0-e23f-440b-bf95-c8e8516a9137",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-property-mapper", "oidc-address-mapper", "oidc-usermodel-attribute-mapper", "oidc-full-name-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-user-attribute-mapper", "saml-role-list-mapper", "saml-user-property-mapper" ]
      }
    }, {
      "id" : "53186efa-819c-4628-b53f-f3bd8e90f4f1",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "2d5578f9-dcb1-4484-96f0-22d6633506ea",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "ba91a87e-2308-4f5d-817b-e639969f06dd",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "43491591-b32a-457b-b784-6066de160a14" ],
        "secret" : [ "V9has6uvYi6OBRucoxxaI1oG6SJKJlkjJVuYaQS3yq1337pTdMjt81HKtGghuyl1bav3GjJkySIEn-hSYQGueQ" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    }, {
      "id" : "65328cef-3faf-4f6e-abef-ae7f9b32a1db",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEAiEOsXkBhpIDz9mc/yBaI3opmpFflHMWDpjXifVlXmEPToVXKLBpob6D+SxofFbhdzDDP+GVCXJj+Ir2O8pd+nYJh0Yfq5sln2fso0TBEI0Sqv9MDZi28yGyfsRMbwS7w1LBL6DLMp0iPun5yJpK2x3hpWt1yEEN1yXh2YFKqECM1JJnO1it1jVuLldfka/Fv76URRffg8LNMTOAZRPtrMox3EHwowsN2tfaQoQh+BOuaFjL8XmSmzGvZh4Fnrs7mLTGhMWRKIfKH0cIPkOIHZoa0Q5KxD/27EfVU0diijFh+ShQ+uXD9UM/GwJTPgHpYipl49tTcu/Mrkm3TL9wq6wIDAQABAoIBADFlPr2n3v1wFX/T68YPjSwGxbB7gD1OyCtfSywfT+aNZ9ELNU+JfyRAGw6EeJI6FB5p72ne4xCIEU/soT4FdsuIMQdwmtFwXyogpqo2Me0K/k6tIoVOvSl2XukkwSHlbz3abpnMmG1nm1qCbcTX2FQ0rRRYQ/nrSm5vMZI3RRi17tHs3MUp5l0Ey3hFDn2ZZzXn9NriZW8LKq20zOS89wbg8VEszfkEln+6GALO8ccx3ptvc0LbrjC1xDGh8BDBl2eOdyfj2GlLK6hB4GDEZc0xQkGsyQIwnRfiOYo1ZDMFkX1qlpt4koacHTZYIa4LFYUAkCSAiBMfkr2AWbejgDECgYEA8H7g0aRqVmRuakzbOD6Xclkd6YJucfVo6+y7X/XHwinvz2NY75xfmQ1uBL9SsTOdcMO5IMXWqfyT5lMq7qgUGj0RZYO9nlsOShhvjisAqo+QpZeZTCydOTGCMiG6moRR5hyp8AWlSpSCrVgT19fxTC5N5VK6CSov6KW0XmgdznkCgYEAkQyR61w0JbvlNF5I97VPgf9SDg32X4Y/l8kzumGTdZ0EJLTRxIEP6sIelI6mp17LhKH9Y9+vpolvZMxfKUnz38kN6tswgCp21dG+xghe32oEeG/KgxqNkYzWTORZJJJpJOX7WVvikHz50LL7cc+Di+xVhW1VxkPY0H745ApK24MCgYAUj5Ri9/6LYky6U9XOKjPCd/IBu7/7iDKvMO8YFig85l71SRYabjESIb7NMxo7wiDsuh8CuUdQAyMV5vhdrQsC70OkfS3h8wD2vr4S1oRZEKsaLSrTA2FxuVTbOlz8xuFFnh+9QI5QIQBHF6eipXigvbi1KWx0SiIMbtZL1/TsaQKBgQCJgaIfvsRM9WifkbaY5hCey55NZp0nB8znpz1btr8lY5oW9jhakoO1aRu2d9mzl6FWdn8SHG+XcHji1QBt0wbYIvEHsY20Iw2PPI0fjbXrFMVyK4CPcy+8SQir0lpT2lzFNyVmHD6X/XKSj+rhhPlPP9f/apxDHfTAC28GOF+o4wKBgADcWllq9ydt06Z7Cd+dsyUl40hHieUDo/10sm2bK119RX+0iV/0bu76WM3BcGBRArEIGGP2Rf25hhnE3g9VE6YJNQp3TTuyh7ZrlIwDihqPso5GQCZfjKCJhGeJbv2H5MVEf+/xgHWojgagZY51TJQBGwLffBUie3GP2KUF8yrB" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICnzCCAYcCBgGHmb8qPzANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhyZWxldml1bTAeFw0yMzA0MTkxMzM5MTRaFw0zMzA0MTkxMzQwNTRaMBMxETAPBgNVBAMMCHJlbGV2aXVtMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiEOsXkBhpIDz9mc/yBaI3opmpFflHMWDpjXifVlXmEPToVXKLBpob6D+SxofFbhdzDDP+GVCXJj+Ir2O8pd+nYJh0Yfq5sln2fso0TBEI0Sqv9MDZi28yGyfsRMbwS7w1LBL6DLMp0iPun5yJpK2x3hpWt1yEEN1yXh2YFKqECM1JJnO1it1jVuLldfka/Fv76URRffg8LNMTOAZRPtrMox3EHwowsN2tfaQoQh+BOuaFjL8XmSmzGvZh4Fnrs7mLTGhMWRKIfKH0cIPkOIHZoa0Q5KxD/27EfVU0diijFh+ShQ+uXD9UM/GwJTPgHpYipl49tTcu/Mrkm3TL9wq6wIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQB/QeAlaw3hIAB9mXcQCbiIP6ZhWQZ6qeMf+yqWeMO8xhNtqXhJrbR3x4R6VOvYDa4GI/gV/WQgR7CYR/x1BorlqYO2mzzAL5E2hmiZTbzF+h+mkGCGSsMWjT+aNOzP4ZJtp2T/16+S9bpdqwJRJ2ZnRGAXBSVqZn0GAGKEUCUqQ3GfI/RKMAYPMbNe7YkwDrt/y4OrdYen5/xZhhXw/1EuWhe3Ajcmq/Uwk6ri2an0MgzU6pbm3GiRp3VR6vLhYJJHxdzzXYuzQtA1GpWUoAb7nHwecpRscTe79ebwbDmaEFfbh1TKGUoSk3WeHA+4EnMWbJse0zlylibO5G+8+kGY" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "47053943-065f-4410-ab95-a4e89b6eab20",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEAkcvYOBB5UM90GORcpBgoIO+/l9WUoDnZ0ChjpQIpweevRKAu5AMR0OB7IA5G1kVB8+lAOWF+KbnuvjBezo1YUT/X/+Qoj0o5w/1T4pl6LVN9x01c7QxB8gcR4rDtqhZrX0/5cvLqvXFZUdifYqxBiEcS3+LvVr3itSkKNmK0M0xfv3v0QGD1DTR4UEEgVBN2OFCQtp2x58/6RxLSGP289shahxhwcMpbl6savfbdP6EOrYZoWpkX3OywiJLjBBHQbhh4OoYNIybYJhaMI+MEQDsuaUqGknQk05D+f+oWLRf1um6KJ8Psh7Uf+ZEdwlcwfGx7hAU59vegqlEcoD6kWQIDAQABAoIBAA9LXgxLlh5nFNvDoQBJ1HPYErY/3o6MYxAWHJXjyzOfNWCymRisRcMuuVvcg4vYyhlnP6iFVLHV4nirJFbwtvIXC3a5nZOiirrHqXQc+5cjqg8tS3FGluhn23V3cAcmwO7HufhYCU4ERQVz/wxf26QLKKy55renxc+RVZPs+NBkqegYjmo5PdXTub2Bqoa8lSgHYa1A7v3o8gUyXP6qr/yq5IQ+cn8b6R89EYOY1+s/lmz1IFVp+E09Nz/WTzI89s9HklAm+l/h+pKMeLjzFbQ+xIj/TnafC5ZZfPSygLSUqNQ9hM7ZkANw4kc+85+XTxwB6M8QE0MM3+7z3OHPDwECgYEA9uxmKkDbX9QlaHm+J6HIHcHl/h9b8NBiggxUTh69e0ZAv7leBXltdse+HqdxzenItnrmshHHy9WCz23nwbJSF6Zj8YtHEF/Uzp6KqHWrrnbwDqryN7s/55WaFKMmGP3mQ5PGw4jWDVbx6uUTrPJANdoE2oj3/dZTJoZ8mV2FjvkCgYEAlyfRXei+9kIfpe3X+xoRaOX015p5Q7j2F6uX5PCeXaQPXJOahBSA95xrtZMi9cmrJtbaWTXta8imqwj13L8uPM+o2VwMlkGmeOvI+/Fl0ajOR1WkZuXku1jPIjs3l8lgVnqSvEro/7wkXhKLjuEvC32dVJwj+WUwhg/hB8KFOGECgYEAgl2zXvGZIRIXof5MyA3hYtyhejbCSvUqXTD3Pbt7HN+thcvveQJwKbsxhGuxaR7aKoXe0PsUOmkCxFNpfdmRAA2ITNnU7i86YtBPsrtVpioDeisE8Sm6hqF0lRrCHYXHkbwuv8O6B5b06KiDZ9cK0aPG1j5keC80/W0Z0bsPrbkCgYB/2Demm+JX2ll2OBKC2Ot8s3JAoPCLrPbH0mQoSLNJNCeh/12i9MyXoP8glg/tnuJZeUM4TPpAPXdqFawNRs3OtTx0ivxCYchxYcud+/BIQeQmRXNFbI/nPRgENd2xTatjuUw+YYVsNy7zOfA7qo3lxBq7o0xx9XnzCZ8ktwuCQQKBgQCGZuGgW3P/DWzWHgtLZQSllgz/zVqny6xkCwwpwLpQSbm7vvq9O3YkvcGJC4EtKjs9638zwPHOCqwnGWcLb22DuqtC5QhkfEx3Z8DvXIJDTaPqabY49/VNV/mah5nqqrZy15ZZWABaPaYLZwhqpGA4TDYjVB7MjhZtFELfCI46iA==" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICnzCCAYcCBgGHmb8q8jANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhyZWxldml1bTAeFw0yMzA0MTkxMzM5MTVaFw0zMzA0MTkxMzQwNTVaMBMxETAPBgNVBAMMCHJlbGV2aXVtMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAkcvYOBB5UM90GORcpBgoIO+/l9WUoDnZ0ChjpQIpweevRKAu5AMR0OB7IA5G1kVB8+lAOWF+KbnuvjBezo1YUT/X/+Qoj0o5w/1T4pl6LVN9x01c7QxB8gcR4rDtqhZrX0/5cvLqvXFZUdifYqxBiEcS3+LvVr3itSkKNmK0M0xfv3v0QGD1DTR4UEEgVBN2OFCQtp2x58/6RxLSGP289shahxhwcMpbl6savfbdP6EOrYZoWpkX3OywiJLjBBHQbhh4OoYNIybYJhaMI+MEQDsuaUqGknQk05D+f+oWLRf1um6KJ8Psh7Uf+ZEdwlcwfGx7hAU59vegqlEcoD6kWQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBeLFuzqMhaOLQDfTO/xBw/38jmvOrzGr3iVubCKFiGjnEZwHotfJ2Rxe/QAB1+y1hKat32x15tVhYr2PcJXTzKzcC8x/NvwMeI7r25X7U0i6J9cQxStcQES2EDRVA4hSi5Fh826Ee8du9LuJWYBRhaJDWohkie6aBj7YfcJWepgnaoBcdJzByNkkYCEQ379j1a8ClQNzKUgg6WLL+332PFtbvIM4swq3QwY9DJqQWTspenyPeTJWjT8FVVWfflYXPX12LXdGpAIFimLso8HshBVG4iUJFXUrdwpFkPAykhqZf+j8FRrPQCvh+TeBe8YRL+IOB8AvF2TejKWtP1C08s" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "5938f4c5-3871-43f4-8868-9d812d9ac479",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "9c5b6df1-8453-4443-889d-1c76929ff95f" ],
        "secret" : [ "iMjTqFjKWezZOTACYwF6aQ" ],
        "priority" : [ "100" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "5abff0b2-c932-4615-8001-d5b0d472120c",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "6f03e775-6799-4297-9a21-2b18024c1ec0",
    "alias" : "Authentication Options",
    "description" : "Authentication options.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "basic-auth",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "basic-auth-otp",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "4f7e0556-6315-4bb1-8350-85fe184cf93b",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "b9b7b025-a9dc-4fe0-a760-a93ba20cf695",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "e3f6f49f-e159-4c6f-a309-8ca492a98837",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "91de0113-653b-4e83-b57e-48657b30ca10",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "689b4c2d-4f35-4f2c-ad82-331f24ff8ea3",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "12b7f52e-c84c-4317-92f4-e5fd6fa2ad68",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "b0ba981d-44da-419c-aad1-3dc9a001b884",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "06499237-7fac-4bba-9880-c0a5c7a92a22",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "flowAlias" : "forms",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "b7d15b6d-7c41-4874-95b0-b9702ef23ce2",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "33b189fc-8b4d-4361-9376-960771264fac",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "9dbe1d1c-cbc9-46b0-9516-27dcf99a3c43",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "60e82995-63d3-4f2e-9056-245190343996",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "75b0cfa9-5b9d-4ba1-a005-e4f5c2318175",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "a227b6bb-72ab-42d6-beba-616d4c3917ee",
    "alias" : "http challenge",
    "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "no-cookie-redirect",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "flowAlias" : "Authentication Options",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "2b88b3bc-2de0-4d77-9b33-93ec2c4185f0",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "e8c2c2ca-bc92-43b9-b173-d8170dfc3600",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-profile-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 40,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "id" : "e12e9240-b62f-4473-81a8-5840872de485",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "id" : "6608d183-fe65-485e-81d3-a637bf826568",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "aa4e21ad-6bec-44c3-bc15-476445feb50b",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "d4184286-a5d0-44b1-8ff1-19c0ca7a1687",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "terms_and_conditions",
    "name" : "Terms and Conditions",
    "providerId" : "terms_and_conditions",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "oauth2DevicePollingInterval" : "5",
    "parRequestUriLifespan" : "60",
    "cibaInterval" : "5"
  },
  "keycloakVersion" : "16.1.1",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}